From 9c89cb964f4250360bdd16947b6ce3a0e278e1ce Mon Sep 17 00:00:00 2001
From: Art Limbaga <alimbaga@tektelic.com>
Date: Tue, 28 Jun 2022 13:31:40 -0600
Subject: [PATCH 2/4] reject no match

---
 dmenu.1 |  3 +++
 dmenu.c | 19 ++++++++++++++++++-
 2 files changed, 21 insertions(+), 1 deletion(-)

diff --git a/dmenu.1 b/dmenu.1
index 762f707..0bd4bce 100644
--- a/dmenu.1
+++ b/dmenu.1
@@ -4,6 +4,7 @@ dmenu \- dynamic menu
 .SH SYNOPSIS
 .B dmenu
 .RB [ \-bfivP ]
+.RB [ \-bfirv ]
 .RB [ \-l
 .IR lines ]
 .RB [ \-m
@@ -49,6 +50,8 @@ dmenu matches menu items case insensitively.
 .TP
 .B \-P
 dmenu will not directly display the keyboard input, but instead replace it with dots. All data from stdin will be ignored.
+.B \-r
+dmenu will reject any input which would result in no matching option left.
 .TP
 .BI \-l " lines"
 dmenu lists items vertically, with the given number of lines.
diff --git a/dmenu.c b/dmenu.c
index bd3ba23..1f85c72 100644
--- a/dmenu.c
+++ b/dmenu.c
@@ -39,6 +39,7 @@ static char *embed;
 static int bh, mw, mh;
 static int inputw = 0, promptw, passwd = 0;
 static int lrpad; /* sum of left and right padding */
+static int reject_no_match = 0;
 static size_t cursor;
 static struct item *items = NULL;
 static struct item *matches, *matchend;
@@ -293,12 +294,26 @@ insert(const char *str, ssize_t n)
 {
 	if (strlen(text) + n > sizeof text - 1)
 		return;
+
+	static char last[BUFSIZ] = "";
+	if(reject_no_match) {
+		/* store last text value in case we need to revert it */
+		memcpy(last, text, BUFSIZ);
+	}
+
 	/* move existing text out of the way, insert new text, and update cursor */
 	memmove(&text[cursor + n], &text[cursor], sizeof text - cursor - MAX(n, 0));
 	if (n > 0)
 		memcpy(&text[cursor], str, n);
 	cursor += n;
 	match();
+
+	if(!matches && reject_no_match) {
+		/* revert to last text value if theres no match */
+		memcpy(text, last, BUFSIZ);
+		cursor -= n;
+		match();
+	}
 }
 
 static size_t
@@ -721,7 +736,7 @@ setup(void)
 static void
 usage(void)
 {
-	fputs("usage: dmenu [-bfivP] [-l lines] [-p prompt] [-fn font] [-m monitor]\n"
+	fputs("usage: dmenu [-bfivP] [-bfirv] [-l lines] [-p prompt] [-fn font] [-m monitor]\n"
 	      "             [-nb color] [-nf color] [-sb color] [-sf color] [-w windowid]\n", stderr);
 	exit(1);
 }
@@ -746,6 +761,8 @@ main(int argc, char *argv[])
 			fstrstr = cistrstr;
 		} else if (!strcmp(argv[i], "-P"))   /* is the input a password */
 			passwd = 1;
+		else if (!strcmp(argv[i], "-r")) /* reject input which results in no match */
+			reject_no_match = 1;
 		else if (i + 1 == argc)
 			usage();
 		/* these options take one argument */
-- 
2.37.1

